---

# the main configuration file for WlxOverlay

# which screen to show by default, along with the keyboard
# Valid options:
# - Name of the screen as shown on watch (e.g. "DP-2", "HDMI-1", "Scr 1")
# - Index of the screen, in order of occurrence ("0": first screen)
default_screen: 0

# enable if you cannot see lasers for some reason
fallback_cursors: false

# wayland screen capture method
# one of: dmabuf, screencopy, kde, pipewire, auto
# dmabuf: low overhead gpu capture, supported on wlroots, KWinFT
# screencopy: higher overhead cpu capture, supported on wlroots, KWinFT, Mir
# kde: kde-specific protocol for gpu capture, supported on vanilla KWin
# pipewire: fallback option with annoying screen share popup
#           select one screen upon each popup, when all screens are selected, press cancel
wayland_capture: auto

## enable to swap red and blue channels
wayland_color_swap: false

## enable features that are not completely polished
experimental_features: false

## listen to XSO-style notifications if not empty
notifications_endpoint: 127.0.0.1:42069
notifications_fade_time: 2.5

## show desktop notifications on overlay
dbus_notifications: true

## override sound for notifications
## path relative to ~/.config/wlxoverlay/ or comment out for default
# notifications_sound: notify.wav

## 0 to disable. 1.0 is 100%
notifications_volume: 1.0

## override sound for keyboard
## path relative to ~/.config/wlxoverlay/ or comment out for default
# keyboard_sound: keyboard.wav

## 0 to disable. 1.0 is 100%
keyboard_volume: 1.0

## keyboard haptics strength
## 0 to disable. default: 0.2
keyboard_haptics: 0.2

## additional timezones to display, other than your local time. optional.
alt_timezone1: Asia/Tokyo
alt_timezone2: America/Chicago

## shell commands to execute by the volume rocker. array of args.
volume_up_cmd: [ "pactl", "set-sink-volume", "@DEFAULT_SINK@", "+5%" ]
volume_dn_cmd: [ "pactl", "set-sink-volume", "@DEFAULT_SINK@", "-5%" ]

## enable push-to-talk (or other arbitrary command) on the left hand 
## activates on left hand AltClick. use ~ (null) for no action
## this should work if you're using a simple PulseAudio / PipeWire setup
left_use_ptt: true
left_ptt_dn_cmd: [ "pactl", "set-source-mute", "@DEFAULT_SOURCE@", "0" ]
left_ptt_up_cmd: [ "pactl", "set-source-mute", "@DEFAULT_SOURCE@", "1" ]

## enable push-to-talk (or other arbitrary command) on the right hand 
## activates on right hand AltClick. use ~ (null) for no action
right_use_ptt: false
right_ptt_dn_cmd: [ "ptt", "B2_source", "off" ]
right_ptt_up_cmd: [ "ptt", "B2_source", "on" ]

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Pointer modes
#
# Your pointer's functionality changes depending
# on what mode it is in.
# 
# The keyboard will also inherit the color of the
# pointer and change its mode.
#
#  | Color    | Click   | Keyboard              |
#  | -------------------------------------------|
#  | Blue     | Left    | Main Layout           |
#  | Orange   | Right   | Main Layout + Shift   |
#  | Purple   | Middle  | Alt layout            |

# You may type using both hands. When having both
# pointers on the keyboard at the same time, by
# default the right hand's color will take precedence
# when deciding the mode of the keyboard. You may 
# change this here:

## "Left" or "Right"
primary_hand: Right

## "Left" or "Right"
watch_hand: Left

# The color of the pointer can be set 2 ways:
# - modifier bindings ("ClickModifierRight" and "ClickModifierMiddle")
# - hand orientation

# If you have capacitive buttons, I recommend binding the
# click modifiers to the touch actions of those.
# When touching both, right click takes precedence.

# If you do not have enough buttons to bind modifiers,
# you can also use the hand orientation to set mode.
# Bindings always take precedence over orientation.

## Use backhand-upward orientation for right click mode 
right_click_orientation: false

## Use palm-upwards orientation for middle click mode
middle_click_orientation: false

## Seconds to freeze the cursor for after clicking.
## Aims to help with double clicking.
click_freeze_time: 0.3

## Expose OpenVR input data to external applications
## Key is: "{Left|Right}.{ActionName}", action name is case sensitive input name defined in actions.json
## Value is a file that will be written with the value on every frame (recommend tmpfs)
## Types of Single, Vector1, Vector2 and Vector3 are all exported as Vector3, with the missing values set to 0.
# export_inputs:
#  Right.Scroll: /dev/shm/wlxoverlay_scroll_r

# remember_screen_transforms: true